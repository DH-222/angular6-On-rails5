{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/customer-add/customer-add.component.css","webpack:///./src/app/customer-add/customer-add.component.html","webpack:///./src/app/customer-add/customer-add.component.ts","webpack:///./src/app/customer-list/customer-list.component.css","webpack:///./src/app/customer-list/customer-list.component.html","webpack:///./src/app/customer-list/customer-list.component.ts","webpack:///./src/app/order-add/order-add.component.css","webpack:///./src/app/order-add/order-add.component.html","webpack:///./src/app/order-add/order-add.component.ts","webpack:///./src/app/order-list/order-list.component.css","webpack:///./src/app/order-list/order-list.component.html","webpack:///./src/app/order-list/order-list.component.ts","webpack:///./src/app/product-add/product-add.component.css","webpack:///./src/app/product-add/product-add.component.html","webpack:///./src/app/product-add/product-add.component.ts","webpack:///./src/app/product-list/product-list.component.css","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/app/product.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n    API_URL: string = \"http://localhost:3000/\";\n    constructor(public http: HttpClient) { }\n    // read method    \n    public get(path) {\n\n        var endpoint = this.API_URL + path;\n        return this.http.get(endpoint);\n\n    }\n\n    // create method \n    public post(path: string, body: any) {\n\n        var endpoint = this.API_URL + path;\n        return this.http.post(endpoint, body);\n\n    }\n    // delete method    \n    public delete(path: string) {\n\n        var endpoint = this.API_URL + path;\n        return this.http.delete(endpoint);\n\n    }\n    // update method    \n    public update(path: string, body: any) {\n        var endpoint = this.API_URL + path;\n        return this.http.put(endpoint, body);\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { OrderListComponent } from './order-list/order-list.component';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { ProductAddComponent } from './product-add/product-add.component';\r\nimport { OrderAddComponent } from './order-add/order-add.component';\r\nimport { CustomerAddComponent } from './customer-add/customer-add.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'products',\r\n        component: ProductListComponent\r\n      },\r\n      {\r\n        path: 'orders',\r\n        component: OrderListComponent\r\n      },\r\n      {\r\n        path: 'customers',\r\n        component: CustomerListComponent\r\n      },\r\n      {\r\n        path: 'products/add',\r\n        component: ProductAddComponent\r\n      },\r\n      {\r\n        path: 'products/add/:id',\r\n        component: ProductAddComponent\r\n      },          \r\n      {\r\n        path: 'orders/add',\r\n        component: OrderAddComponent\r\n      },\r\n      {\r\n        path: 'orders/add/:id',\r\n        component: OrderAddComponent\r\n      },          \r\n      {\r\n        path: 'customers/add',\r\n        component: CustomerAddComponent\r\n      },\r\n      {\r\n        path: 'customers/add/:id',\r\n        component: CustomerAddComponent\r\n      },          \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, { enableTracing: false }) // set to true for debugging\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"jumbotron\\\">\\n      <h1>Demo</h1>\\n      <h2>Angular 2+ & Bootstrap 4 & Ruby on Rails 5.1.4 </h2>\\n    </div>\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\" style=\\\"background: greenyellow;\\\">\\n  \\n          <a routerLink=\\\"/products\\\">Products</a>\\n          <a routerLink=\\\"/orders\\\">Orders</a>\\n          <a routerLink=\\\"/customers\\\">Customers</a>\\n          <a routerLink=\\\"/products/add\\\">Add Products</a>\\n          <a routerLink=\\\"/orders/add\\\">Add Orders</a>\\n          <a routerLink=\\\"/customers/add\\\">Add Customers</a>\\n  \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n  \\n          <router-outlet></router-outlet>\\n  \\n  \\n      </div>\\n    </div>\\n  </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ApiService } from './api.service';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { OrderAddComponent } from './order-add/order-add.component';\nimport { CustomerAddComponent } from './customer-add/customer-add.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { OrderListComponent } from './order-list/order-list.component';\nimport { CustomerListComponent } from './customer-list/customer-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductAddComponent,\n    OrderAddComponent,\n    CustomerAddComponent,\n    ProductListComponent,\n    OrderListComponent,\n    CustomerListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  customer-add works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-add',\n  templateUrl: './customer-add.component.html',\n  styleUrls: ['./customer-add.component.css']\n})\nexport class CustomerAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  customer-list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-customer-list',\n  templateUrl: './customer-list.component.html',\n  styleUrls: ['./customer-list.component.css']\n})\nexport class CustomerListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-add works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-add',\n  templateUrl: './order-add.component.html',\n  styleUrls: ['./order-add.component.css']\n})\nexport class OrderAddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  order-list works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-list',\n  templateUrl: './order-list.component.html',\n  styleUrls: ['./order-list.component.css']\n})\nexport class OrderListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit()\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-xs-4 control-label\\\" for=\\\"\\\">Product name: </label>\\n            <div class=\\\"col-xs-8\\\">\\n                <input type=\\\"text\\\" style=\\\"width: 300px\\\" class=\\\"form-control\\\" required\\n                    [(ngModel)]=\\\"product.name\\\" name=\\\"productName\\\">\\n            </div>\\n            <div>\\n            <input type=\\\"submit\\\" value=\\\"Create\\\" />\\n            </div>\\n        </div>\\n    </form>\"","import { Component, OnInit } from '@angular/core';\nimport { Product } from '../product';\n    import { ApiService } from '../api.service';\n    import { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css']\n})\nexport class ProductAddComponent implements OnInit {\n\n    constructor(public apiService: ApiService , public acRoute : ActivatedRoute) { }\n    public product : Product  = new Product();\n    ngOnInit() {\n\n        this.acRoute.params.subscribe((data : any)=>{\n        console.log(data.id);\n        if(data && data.id){\n            this.apiService.get(\"products/\"+data.id).subscribe((data : Product)=>{\n            this.product = data;\n            });\n        }\n        else\n        {\n            this.product = new Product();\n        }\n        })\n    }\n    public onSubmit(){\n        console.log(\"Adding a product: \" + this.product.name);\n        if(this.product.id){\n        this.apiService.update(\"products/\"+this.product.id,this.product).subscribe((r)=>{\n            console.log(r);\n            alert(\"Product updated !\");\n        })\n        }\n        else\n        this.apiService.post(\"products\",this.product).subscribe((r)=>{\n        console.log(r);\n        this.product = new Product();\n        alert(\"Product added !\");\n\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-default\\\" style=\\\"margin-top:10px;\\\">\\n  <div class=\\\"panel-heading\\\">\\n    Products\\n  </div>\\n  <div class=\\\"panel-body\\\" style=\\\"position:relative\\\">\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th>Actions</th>\\n            <th *ngFor=\\\"let column of columns\\\">\\n\\n            </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n\\n          <tr *ngFor=\\\"let row of rows\\\">\\n            {{row['id']}}\\n            {{row['name']}}\\n            <button (click)=\\\"delete(row['id'])\\\">delete</button> ||\\n            <button (click)=\\\"update(row['id'])\\\">update</button>\\n\\n            <td *ngFor=\\\"let column of columns\\\">\\n\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { Product } from '../product';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n    public columns = ['id','name'];\n    public rows : Array<Product>; \n    constructor(public apiService: ApiService , public router : Router) {\n    }\n\n    ngOnInit() {\n        this.apiService.get(\"products\").subscribe((data : Product[])=>{\n        console.log(data);\n        this.rows = data;\n        });\n    }\n    public delete(id:string){\n\n        console.log(\"delete : \" + id);\n        var path = 'products/' + id;\n        this.apiService.delete(path).subscribe((r)=>{\n    \n        this.rows = this.rows.filter((p,i)=>{\n    \n            if(Number(id) === p.id ) \n            {\n            return false;\n            }\n            return true;\n        },this.rows)\n    \n        });\n    \n    }\n    public update(id:string){\n        console.log(\"update : \" + id );\n        this.router.navigateByUrl('/products/add/' + id);\n    }\n}\n","export class Product{\r\n    public id:number;\r\n    public name:string;\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}